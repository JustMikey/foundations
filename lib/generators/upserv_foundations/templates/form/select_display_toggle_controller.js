// DO NOT EDIT THIS FILE. This file is autogenerated by Upserv Foundations.
import { Controller } from '@hotwired/stimulus'

export default class extends Controller {
  connect() {
    this.displayToggleClass = this.element.dataset.displayToggleClass
    this.toggleElements = document.getElementsByClassName(
      this.displayToggleClass
    )
    this.options = this.element.querySelectorAll('OPTION')
    this.toggleDisplay()
  }

  toggleDisplay() {
    // hide all toggle elements
    for (let i = 0; i < this.toggleElements.length; i++) {
      let toggleElement = this.toggleElements[i]
      toggleElement.style.display = 'none'
    }

    // get the show class
    let showClass
    for (let i = 0; i < this.options.length; i++) {
      let option = this.options[i]
      if (option.selected == true) {
        showClass = option.dataset.showClass
      }
    }
    // then get all the show elements from current toggle elements and display them
    for (let i = 0; i < this.toggleElements.length; i++) {
      let toggleElement = this.toggleElements[i]
      if (toggleElement.classList.contains(showClass)) {
        toggleElement.style.display = toggleElement.dataset.display

        // if there are nested select toggles, then we need to re-trigger
        // the "change" action for those nested selects. Here is why:
        // ex.
        //   level 1 = rooms (this is a toggle select)
        //   level 2 = desks (this is a toggle select)
        //   level 3 = drawers (this is a regular select)
        //   you select room 1 and a new select opens up with 3 desks to pick from
        //   you select desk 2 (inside room 1) and a enw select opens to pick drawers
        //   you select drawer 1
        //   then you change your mind and select room 2
        //   this will hide the desk AND the drawer select (because you should make
        //   the drawers a toggle element of both desks and rooms)
        //   which is great
        //   except you change your mind again and go back to room 1
        //   this opens your previous selection of desk 2
        //   however the drawers select is still hidden from when you changed your mind
        //   to room 2
        //   so when you change your mind back to room 1, we need to make sure that all nested
        //   toggles receive a "change" event so that when you go back to room 1 it both populates
        //   the desk you previously chose AND the drawer. That's what the code below ensures.
        let selects = toggleElement.querySelectorAll('select')
        selects.forEach(function (select) {
          let event = new Event('change', {
            bubbles: true,
            cancelable: true,
          })
          select.dispatchEvent(event)
        })
      }
    }
  }
}
