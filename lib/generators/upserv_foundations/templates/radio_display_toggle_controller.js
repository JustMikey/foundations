// DO NOT EDIT THIS FILE. This file is autogenerated by Upserv Foundations.
import { Controller } from '@hotwired/stimulus'

// Connects to data-controller="radio-display-toggle"
export default class extends Controller {
  connect() {
    this.radios = this.element.querySelectorAll('input[type="radio"]')
    for (var i = 0; i < this.radios.length; i++) {
      var radio = this.radios[i]
      radio.addEventListener('change', () => {
        this.checkAllRadioStates()
      })
    }
    // run one time on page load to make sure it all matches
    this.checkAllRadioStates()
  }

  checkAllRadioStates() {
    for (var i = 0; i < this.radios.length; i++) {
      var radio = this.radios[i]
      this.checkRadioState(radio)
    }
  }

  checkRadioState(radio) {
    const hideElements = document.getElementsByClassName(
      radio.dataset.hideClass
    )
    for (let i = 0; i < hideElements.length; i++) {
      var hideElement = hideElements[i]
      hideElement.style.display = radio.checked
        ? 'none'
        : hideElement.dataset.display
    }

    const showElements = document.getElementsByClassName(
      radio.dataset.showClass
    )
    for (let i = 0; i < showElements.length; i++) {
      let showElement = showElements[i]
      showElement.style.display = radio.checked
        ? showElement.dataset.display
        : 'none'
    }
    // these notes might need cleaning. I think they are close to explaining what's
    // going on. Regardless, we need to trigger the change event for nested toggled radios
    // Also it has to be in a seperate for loop because if done in the same for loop as above
    // the js order of events gets off and it doesn't work. This works though.
    // if there are nested radio toggles, then we need to re-trigger
    // the "change" action for those nested radios. Here is why:
    // ex.
    //   level 1 = rooms (this is a toggle radio)
    //   level 2 = desks (this is a toggle radio)
    //   level 3 = drawers (this is a regular radio)
    //   you select room 1 and a new radio opens up with 3 desks to pick from
    //   you select desk 2 (inside room 1) and a enw radio opens to pick drawers
    //   you select drawer 1
    //   then you change your mind and select room 2
    //   this will hide the desk AND the drawer radio (because you should make
    //   the drawers a toggle element of both desks and rooms)
    //   which is great
    //   except you change your mind again and go back to room 1
    //   this opens your previous selection of desk 2
    //   however the drawers radio is still hidden from when you changed your mind
    //   to room 2
    //   so when you change your mind back to room 1, we need to make sure that all nested
    //   toggles receive a "change" event so that when you go back to room 1 it both populates
    //   the desk you previously chose AND the drawer. That's what the code below ensures.
    for (let i = 0; i < showElements.length; i++) {
      let showElement = showElements[i]
      let radios = showElement.querySelectorAll('input[type="radio"]')
      radios.forEach(function (radio) {
        let event = new Event('change', {
          bubbles: true,
          cancelable: true,
        })
        radio.dispatchEvent(event)
      })
    }
  }
}
