.card-container {
  // page-body-max-width has padding on all sides but bottom
  // because card takes it. However, last card, the margin bottom
  // seems to be collapsing and we can't use padding bottom in the
  // card element because it will ahve a different background color.
  // So adding padding bottom to the card-container
  padding-bottom: 15px;
  // &.full-height {
  //   height: 100%;
  // }
}
// since the card-container has padding bottom instead of margin,
// we can't have border radius on the card-container because the
// bottom corners rounding will happen after the padding making it
// not show up. And we can't have border-radius on the card because
// the card body might have a horizontal scrollbar at the bottom which
// also kills the border radius. BUt this overcomes both issues and works
// great
.card-border-radius-container {
  border-radius: 5px;
  overflow: hidden;
}
.card {
  // fit the max width set by the page-body-max-width
  width: 100%;
  background-color: var(--background-gray0-color);
  // this was the only way I could get the card to actually be 100% max
  // height. Overwise it would go over and I have no idea why
  // I think its because the card body does not actually have a set height
  // so it just takes the height of its' contents but it is the element
  // that has the overflow and so without a set
  // height, it's contents cannot overflow because it's height just increases.
  // But adding display flex and flex direct column, I'm pretty sure makes
  // the card body height max out at it's parent containers remaining height
  // (whenever it's contents are taller than the remaining height)
  &.set-height {
    display: flex;
    flex-direction: column;
  }
}

.card-header {
  padding: 15px 15px 15px;
  font-size: 24px;
}

.card-header-divider {
  margin: 0px 15px 0px;
  border-bottom: 1px solid var(--divider1-color);
}

.card-body {
  font-size: var(--default-font-size);
  padding: 15px;
  &.remove-padding {
    padding: 0px;
  }
  border-radius: 5px;
  overflow-y: overlay;
  overflow-x: auto;
}
